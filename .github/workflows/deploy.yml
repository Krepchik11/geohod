name: Build and Deploy

on:
  release:
    types:
      - published

jobs:
  build-and-publish:
    name: Build and publish docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Build production app
        run: npm run build

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Build and export
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile
          tags: ${{ github.repository }}:${{ github.ref_name }}
          outputs: type=docker,dest=./image.tar

      - name: Transfer image to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ vars.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: ./image.tar
          target: /tmp/geohod-frontend/
          overwrite: true
          rm: true

      - name: Cleanup local file
        if: always()
        run: rm ./image.tar

      - name: Process environment variables
        id: env-processing
        run: |
          declare -a env_args=()
          
          # Process secret variables using readarray
          readarray -t secret_lines <<< "${{ secrets.SECRET_VARS }}"
          for line in "${secret_lines[@]}"; do
            # Skip empty lines
            [[ -z "$line" ]] && continue
            # Validate environment variable format
            if [[ $line =~ ^[A-Za-z_][A-Za-z0-9_]*= ]]; then
              env_args+=("-e $line")
            else
              echo "Warning: Invalid secret variable format: $line" >&2
            fi
          done
          
          # Process environment variables using readarray
          readarray -t env_lines <<< "${{ vars.ENV_VARS }}"
          for line in "${env_lines[@]}"; do
            # Skip empty lines
            [[ -z "$line" ]] && continue
            # Validate environment variable format
            if [[ $line =~ ^[A-Za-z_][A-Za-z0-9_]*= ]]; then
              env_args+=("-e $line")
            else
              echo "Warning: Invalid environment variable format: $line" >&2
            fi
          done
          
          # Join the array elements with spaces
          ENV_ARGS="${env_args[*]}"
          
          # Set output using the correct GitHub Actions syntax
          echo "env_args=${ENV_ARGS}" >> "$GITHUB_OUTPUT"
          
          rm processed_env.txt

      - name: VPS launch
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            docker load < /tmp/geohod-frontend/image.tar
            docker stop geohod-frontend || true
            docker rm geohod-frontend || true

            docker run -d --restart always \
              --network=geohod \
              --name geohod-frontend \
              -p 80:80 \
              -p 443:443 \
              -v /etc/letsencrypt:/etc/nginx/certs \
              ${{ steps.env-processing.outputs.env_args }} \
              ${{ github.repository }}:${{ github.ref_name }}